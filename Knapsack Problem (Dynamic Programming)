{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\nدر اینجا کد یک راه‌حل بهینه برای مسئله Knapsack با استفاده از Dynamic Programming آورده شده است. این مسئله به ما می‌گوید که چگونه می‌توانیم یک مجموعه از آیتم‌ها را با وزنی مشخص انتخاب کنیم به طوری که از یک ظرفیت معین از کیف بیشترین سود ممکن را بدست آوریم.","metadata":{}},{"cell_type":"markdown","source":"توضیحات کد:\nالگوریتم Dynamic Programming:\n\nابتدا یک جدول dp به اندازه (n+1) x (W+1) ساخته می‌شود که در آن n تعداد آیتم‌ها و W ظرفیت کیف است.\n\nدر هر سلول از جدول، بهترین سود ممکن با انتخاب آیتم‌های مختلف محاسبه می‌شود.\n\nاگر وزن آیتم به ظرفیت کنونی کیف بخورد، باید تصمیم بگیریم که آن را انتخاب کنیم یا نه. در غیر این صورت، آن را کنار می‌گذاریم.\n\nنمایش گرافیکی:\n\nپس از محاسبه جواب نهایی، از matplotlib برای نمایش جدول dp به صورت یک گراف استفاده می‌شود.\n\nگراف به شما کمک می‌کند تا روند بهینه‌سازی و محاسبه سود را در طول ظرفیت‌های مختلف و آیتم‌های مختلف ببینید.","metadata":{}},{"cell_type":"markdown","source":"نتیجه‌گیری:\n\nاین پروژه با استفاده از الگوریتم برنامه‌نویسی پویا مسئله Knapsack\nرا حل می‌کند و نتایج آن را به صورت گرافیکی نشان می‌دهد. این پروژه به شما کمک می‌کند تا اصول برنامه‌نویسی پویا را یاد بگیرید و نحوه استفاده از آن‌ها برای حل مسائل بهینه‌سازی را درک کنید.","metadata":{}},{"cell_type":"markdown","source":"\nکتابخانه‌ها:\n\nnumpy: برای ایجاد و دستکاری جدول DP.\n\nmatplotlib: برای رسم جدول گرافیکی DP.","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\n\n# تابع حل مسئله Knapsack با استفاده از Dynamic Programming\ndef knapsack(weights, values, W):\n    n = len(weights)\n    dp = np.zeros((n + 1, W + 1))\n\n    for i in range(1, n + 1):\n        for w in range(1, W + 1):\n            if weights[i - 1] <= w:\n                dp[i][w] = max(dp[i - 1][w], dp[i - 1][w - weights[i - 1]] + values[i - 1])\n            else:\n                dp[i][w] = dp[i - 1][w]\n    \n    return dp[n][W], dp\n\n# داده‌های مسئله Knapsack\nweights = [2, 3, 4, 5]  # وزن‌ها\nvalues = [3, 4, 5, 6]   # ارزش‌ها\nW = 5                   # ظرفیت کیف\n\n# حل مسئله\nmax_value, dp = knapsack(weights, values, W)\n\n# نمایش نتایج\nprint(f\"Maximum value in Knapsack: {max_value}\")\n\n# رسم نمودار برای نمایش جدول DP\nfig, ax = plt.subplots(figsize=(8, 6))\ncax = ax.matshow(dp, cmap='Blues')\n\n# اضافه کردن برچسب‌ها به نمودار\nax.set_xticks(np.arange(W + 1))\nax.set_yticks(np.arange(len(weights) + 1))\nax.set_xticklabels(np.arange(W + 1))\nax.set_yticklabels(np.arange(len(weights) + 1))\n\n# اضافه کردن رنگ‌بندی و عنوان\nplt.title(\"Dynamic Programming Table for Knapsack Problem\")\nfig.colorbar(cax)\n\n# نمایش نمودار\nplt.xlabel(\"Capacity\")\nplt.ylabel(\"Items\")\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-08T06:44:57.230932Z","iopub.execute_input":"2025-05-08T06:44:57.231341Z","iopub.status.idle":"2025-05-08T06:44:57.698060Z","shell.execute_reply.started":"2025-05-08T06:44:57.231307Z","shell.execute_reply":"2025-05-08T06:44:57.697179Z"}},"outputs":[{"name":"stdout","text":"Maximum value in Knapsack: 7.0\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 2 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":1}]}